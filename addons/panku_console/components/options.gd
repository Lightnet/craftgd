extends Node

@export var export_comment_1 = "You can find config file at " + PankuConsole.Config.FILE_PATH

@export_group("Window Appearance")

@export var blur_effect:bool = true:
	set(v):
		Console._full_repl.material.set("shader_parameter/lod", 4.0 if v else 0.0)
	get:
		return Console._full_repl.material.get("shader_parameter/lod") > 0.0

@export var base_color:Color = Color(0.0, 0.0, 0.0, 0.1):
	set(v):
		Console._full_repl.material.set("shader_parameter/modulate", v)
	get:
		return Console._full_repl.material.get("shader_parameter/modulate")

@export_group("REPL")

@export_range(12,20) var output_font_size:int:
	set(v):
		Console._full_repl.get_content()._console_logs.set_font_size(v)
	get:
		return Console._full_repl.get_content()._console_logs.get_font_size()
@export var export_button_clear_repl_output = "Clear REPL Output"
@export var export_comment_2 = "Whether the whole game should be paused when REPL window is visible"
@export var freeze_when_popup:bool = true:
	set(v):
		Console.pause_when_active = v
	get:
		return Console.pause_when_active
@export var mini_mode:bool = false:
	set(v):
		Console.mini_repl_mode = v
	get:
		return Console.mini_repl_mode
@export var export_comment_3 = "init_expression will be executed when the project starts"
@export var init_expression:String = "":
	set(v):
		Console.init_expression = v
	get:
		return Console.init_expression

@export_group("Tools")
@export var export_button_add_profiler_widget := "Add Profiler Monitor"
@export var export_button_open_expression_key_mapper := "Open Expression Key Mapper"
@export var export_button_open_expression_history := "Open Expression History"
@export var export_button_open_logger := "Open Logger"

@export_group("Experimental")
@export var enable_os_window := false:
	set(v):
		Console.w_manager.enable_os_popup_btns(v)
	get:
		return Console.w_manager.os_popup_btn_enabled
@export var os_window_bg_color:Color:
	set(v):
		Console.w_manager.set_os_window_bg_color(v)
	get:
		return Console.w_manager.os_window_bg_color

@export_group("About")
@export var export_button_show_intro := "Show Intro"
@export var export_button_check_update := "Check Update"
@export var export_button_report_bugs := "Report Bugs"
@export var export_button_suggest_features := "Suggest Features"
@export var export_comment_4 = "Hint: The whole UI of settings is totally generated by exporter, you can view the source in options.gd"


#export button callbacks

func clear_repl_output():
	Console.execute("console.cls")

func add_profiler_widget():
	Console.execute("widgets.profiler")

func open_expression_key_mapper():
	Console.open_expression_key_mapper()

func open_expression_history():
	Console.open_expression_history()
	
func open_logger():
	Console.open_logger()

func show_intro():
	Console.show_intro()

func check_update():
	Console.execute("console.check_update")

func report_bugs():
	OS.shell_open("https://github.com/Ark2000/PankuConsole/issues")

func suggest_features():
	OS.shell_open("https://github.com/Ark2000/PankuConsole/issues")
